@mixin bp($size) {

  @if ($size == small-only) {
    @media screen and (min-width: em(map-get($breakpoints, small))) and (max-width: em(map-get($breakpoints, medium))) {  @content;  }
  } @else if($size == medium-only) {
    @media screen and (min-width: em(map-get($breakpoints, medium))) and (max-width: em(map-get($breakpoints, large))) {  @content;  }
  } @else if($size == medium) {
    @media screen and (min-width: em(map-get($breakpoints, medium))) {  @content;  }
  } @else if($size == large-only) {
    @media screen and (min-width: em(map-get($breakpoints, large))) and (max-width: em(map-get($breakpoints, xlarge))) {  @content;  }
  } @else if($size == large) {
    @media screen and (min-width: em(map-get($breakpoints, large))) {  @content;  }
  } @else if($size == xlarge-only) {
    @media screen and (min-width: em(map-get($breakpoints, xlarge))) and (max-width: em(map-get($breakpoints, xxlarge))) {  @content;  }
  } @else if($size == xlarge) {
    @media screen and (min-width: em(map-get($breakpoints, xlarge))) {  @content;  }
  } @else {
    @error "#{$size} is not a valid breakpoint";
  }
}

//----------------------- POSITIONING -----------------------//

@mixin position($position, $args) {
  position: $position;

  @each $o in top right bottom left {
    $i: index($args, $o);

    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
      $val: nth($args, $i + 1);

      @if (unit($val) != '%' and $val != 0) {
        $val: rem($val);
      }

      #{$o}: $val;
    }
  }
}

@mixin absolute($args) {
  @include position(absolute, $args); }

@mixin fixed($args) {
  @include position(fixed, $args);  }

@mixin relative($args) {
  @include position(relative, $args);  }

//----------------------- SHAPES -----------------------//

@mixin triangle($width, $height, $color, $direction) {
  $width: rem($width / 2);
  $color-border-style: rem($height + .5) solid $color;
  $transparent-border-style: $width solid transparent;
  height: 0;
  width: 0;
  @if $direction == up {
    border-right: $transparent-border-style;
    border-bottom: $color-border-style;
    border-left: $transparent-border-style;
  } @else if $direction == right {
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
    border-left: $color-border-style;
  } @else if $direction == down {
    border-top: $color-border-style;
    border-right: $transparent-border-style;
    border-left: $transparent-border-style;
  } @else if $direction == left {
    border-top: $transparent-border-style;
    border-right: $color-border-style;
    border-bottom: $transparent-border-style;
  }
}
